/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#include "keys_de.h"
#include "zmk-helpers/helper.h"
#include "zmk-helpers/key-labels/42.h"

#define KEYS_L LT0 LT1 LT2 LT3 LT4 LM0 LM1 LM2 LM3 LM4 LB0 LB1 LB2 LB3 LB4
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RM0 RM1 RM2 RM3 RM4 RB0 RB1 RB2 RB3 RB4
#define THUMBS_L LH2 LH1 LH0
#define THUMBS_R RH2 RH1 RH0

#define DEF 0
#define SYM 1
#define NAV 2
#define SYS 3


#define MAKE_BRM(NAME, HOLD, TAP, TRIGGER_POS)                           \
  ZMK_HOLD_TAP(NAME, bindings = <HOLD>, <TAP>; flavor = "balanced";      \
               tapping-term-ms = <250>; quick-tap-ms = <175>;            \
              hold-trigger-on-release; hold-trigger-key-positions = <TRIGGER_POS>;)

// Left-hand BRMs
MAKE_BRM(hml, &kp, &kp, KEYS_R THUMBS_R)
MAKE_BRM(hmlpergre, &kp, &pergre, KEYS_R THUMBS_R)

// Right-hand BRMs
MAKE_BRM(hmr, &kp, &kp, KEYS_L THUMBS_L)

&lt {
  flavor = "balanced";
  tapping-term-ms = <250>;
  quick-tap-ms = <175>;
};

&caps_word {
  continue-list = <DE_UNDERSCORE DE_MINUS BACKSPACE DELETE>;
};

/ {

  behaviors {
    // `´
    gracu: grave_acute {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&kp DE_GRAVE>, <&kp DE_ACUTE>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    slabs: slash_bslh {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&kp DE_SLASH>, <&kp DE_BSLH>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    // §^
    secar: sect_caret {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&kp DE_SECT>, <&kp DE_CARET>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    pergre: percent_degree {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&kp DE_PERCENT>, <&kp DE_DEGREE>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    qmpip: qmark_pipe {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&kp DE_QMARK>, <&kp DE_PIPE>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    uue: umlaut_ue {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&kp U>, <&kp DE_U_UMLAUT>;
        mods = <(MOD_LALT|MOD_RALT)>;
    };
    aae: umlaut_ae {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&kp A>, <&kp DE_A_UMLAUT>;
        mods = <(MOD_LALT|MOD_RALT)>;
    };
    ooe: umlaut_oe {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&kp O>, <&kp DE_O_UMLAUT>;
        mods = <(MOD_LALT|MOD_RALT)>;
    };
    ssz: sharp_s {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&kp S>, <&kp DE_SZ>;
        mods = <(MOD_LALT|MOD_RALT)>;
    };
  };

  macros {
    locscr: lock_screen {
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        bindings =
                <&macro_press &kp RCTRL &kp RCMD>,
                <&macro_tap &kp Q>,
                <&macro_release &kp RCTRL &kp RCMD>;
    };
  };

  keymap {
    compatible = "zmk,keymap";
    default_layer {
      display-name = "Base";
// -----------------------------------------------------------------------------------------
// |      |  Q  |  W  |  E  |  R  |  T  |   |  Z  |  U   |  I  |  O  |  P  |      |
// |      |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  | ENT |      |
// |      |  Y  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  -  |      |
//                    | ESC |BSPC |SHIFT|   |SPACE| DEL  | TAB |
                        bindings = <
   &none &kp Q           &kp W       &kp E        &kp R        &kp T              &kp DE_Z      &uue        &kp I               &ooe             &kp P               &none
   &none &aae            &ssz        &kp D        &kp F        &kp G              &kp H         &kp J       &kp K               &kp L            &kp RET             &none
   &none &hml LCTRL DE_Y &hml LALT X &hml LSHFT C &hml LCMD V  &kp B              &kp N         &hmr RCMD M &hmr RSHFT DE_COMMA &hmr RALT DE_DOT &hmr RCTRL DE_MINUS &none
                                     &kp ESC      &lt NAV TAB  &lt SYM BSPC       &lt SYM SPACE &lt NAV DEL &kp GLOBE
                        >;
    };

    sym_layer {
      display-name = "Sym";
// -----------------------------------------------------------------------------------------
// |      |  !  |  "  |  {  |  }  |  `´ |   |  /\ |  7  |  8  |  9  |  *  |      |
// |      |  §^ |  $  |  (  |  )  |  '  |   |  =  |  4  |  5  |  6  |  +  |      |
// |      |  %° |  &  |  [  |  ]  |  #  |   |  ?| |  1  |  2  |  3  |  0  |      |
//                    |  <  |  >  |     |   |     |     |     |
                        bindings = <
   &none &kp DE_EXCL        &kp DE_DQT        &kp DE_LBRC        &kp DE_RBRC       &gracu        &slabs       &kp DE_N7       &kp DE_N8        &kp DE_N9       &kp DE_STAR      &none
   &none &secar             &kp DE_DOLLAR     &kp DE_LPAR        &kp DE_RPAR       &kp DE_SQT    &kp DE_EQUAL &kp DE_N4       &kp DE_N5        &kp DE_N6       &kp DE_PLUS      &none
   &none &hmlpergre LCTRL 0 &hml LALT DE_AMPS &hml LSHFT DE_LBKT &hml LCMD DE_RBKT &kp DE_HASH   &qmpip       &hmr RCMD DE_N1 &hmr RSHFT DE_N2 &hmr RALT DE_N3 &hmr RCTRL DE_N0 &none
                                              &kp DE_LT          &kp DE_GT         &trans        &trans       &trans          &trans
                        >;
    };

    nav_layer {
      display-name = "Nav";
// -----------------------------------------------------------------------------------------
// |      |BRIUP| F1  | F2  | F3  | F10 |   |PgUp | Home|  ↑  | End |VOLUP|      |
// |      |CAPLO| F4  | F5  | F6  | F11 |   |PgDn |  ←  |  ↓  |  →  |VOLDO|      |
// |      |BRIDO| F7  | F8  | F9  | F12 |   |     |     |     |     | MUTE|      |
//                    |     |     |     |   |     |     |     |
                        bindings = <
   &none &kp F15        &kp F1       &kp F2        &kp F3       &kp F10   &kp PG_UP &kp HOME &kp UP    &kp END   &kp C_VOL_UP      &none
   &none &caps_word     &kp F4       &kp F5        &kp F6       &kp F11   &kp PG_DN &kp LEFT &kp DOWN  &kp RIGHT &kp C_VOL_DN      &none
   &none &hml LCTRL F14 &hml LALT F7 &hml LSHFT F8 &hml LCMD F9 &kp F12   &none     &kp RCMD &kp RSHFT &kp RALT  &hmr RCTRL C_MUTE &none
                                     &trans        &trans       &trans    &trans    &trans   &trans
                        >;
    };

    sys_layer {
      display-name = "Sys";
// -----------------------------------------------------------------------------------------
// |      |     |     |     |     |     |   |     |     |     |     |     |      |
// |      |     |     |     |     |STUDI|   |     |     |     |     |     |      |
// |      | BT0 | BT1 | BT2 |BTCLR|BCLRA|   |LOCKS|     |     |     |     |      |
//                    |     |     |     |   |     |     |     |
                        bindings = <
   &none &none        &none        &none        &none      &none            &none   &none  &none &none &none &none
   &none &none        &none        &none        &none      &studio_unlock   &none   &none  &none &none &none &none
   &none &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_CLR &bt BT_CLR_ALL   &locscr &none  &none &none &none &none
                                   &trans       &trans     &trans           &trans  &trans &trans
                        >;
    };

  };

  conditional_layers {
    compatible = "zmk,conditional-layers";
    sys_layer {
      if-layers = <SYM NAV>;
      then-layer = <SYS>;
    };
  };
};
