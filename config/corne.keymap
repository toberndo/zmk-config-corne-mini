/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#include "keys_de.h"
#include "zmk-helpers/helper.h"
#include "zmk-helpers/key-labels/42.h"

#define KEYS_L LT0 LT1 LT2 LT3 LT4 LM0 LM1 LM2 LM3 LM4 LB0 LB1 LB2 LB3 LB4
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RM0 RM1 RM2 RM3 RM4 RB0 RB1 RB2 RB3 RB4
#define THUMBS_L LH2 LH1 LH0
#define THUMBS_R RH2 RH1 RH0

#define DEF 0
#define SYM 1
#define NAV 2
#define FUN 3
#define SYS 4

// CTRL and CMD
#define MAKE_BRM(NAME, HOLD, TAP, TRIGGER_POS)                         \
  ZMK_HOLD_TAP(NAME, bindings = <HOLD>, <TAP>; flavor = "balanced";      \
              tapping-term-ms = <250>; quick-tap-ms = <175>;             \
              require-prior-idle-ms = <150>; hold-trigger-on-release; hold-trigger-key-positions = <TRIGGER_POS>;)

// SHIFT and ALT
#define MAKE_HRM(NAME, HOLD, TAP, TRIGGER_POS)                         \
  ZMK_HOLD_TAP(NAME, bindings = <HOLD>, <TAP>; flavor = "balanced";      \
              tapping-term-ms = <200>; quick-tap-ms = <175>;             \
              hold-trigger-on-release; hold-trigger-key-positions = <TRIGGER_POS>;)

// Left-hand
MAKE_HRM(hrml, &kp, &kp, KEYS_R THUMBS_R)
MAKE_HRM(hrmsz, &kp, &ssz, KEYS_R THUMBS_R)
MAKE_BRM(brml, &kp, &kp, KEYS_R THUMBS_R)


// Right-hand
MAKE_BRM(brmr, &kp, &kp, KEYS_L THUMBS_L)
MAKE_HRM(hrmr, &kp, &kp, KEYS_L THUMBS_L)

&lt {
  flavor = "balanced";
  tapping-term-ms = <250>;
  quick-tap-ms = <175>;
};

&caps_word {
  continue-list = <DE_UNDERSCORE DE_MINUS BACKSPACE DELETE>;
};

/ {

  behaviors {
    uue: umlaut_ue {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&kp U>, <&kp DE_U_UMLAUT>;
        mods = <(MOD_LALT|MOD_RALT)>;
    };
    aae: umlaut_ae {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&kp A>, <&kp DE_A_UMLAUT>;
        mods = <(MOD_LALT|MOD_RALT)>;
    };
    ooe: umlaut_oe {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&kp O>, <&kp DE_O_UMLAUT>;
        mods = <(MOD_LALT|MOD_RALT)>;
    };
    ssz: sharp_s {
        compatible = "zmk,behavior-mod-morph";
        #binding-cells = <0>;
        bindings = <&kp S>, <&kp DE_SZ>;
        mods = <(MOD_LALT|MOD_RALT)>;
    };
  };

  macros {
    locscr: lock_screen {
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        bindings =
                <&macro_press &kp RCTRL &kp RCMD>,
                <&macro_tap &kp Q>,
                <&macro_release &kp RCTRL &kp RCMD>;
    };
  };

  keymap {
    compatible = "zmk,keymap";
    default_layer {
      display-name = "Base";
// -----------------------------------------------------------------------------------------
// |      |  Q  |  W  |  E  |  R  |  T  |   |  Z  |  U   |  I  |  O  |  P  |      |
// |      |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  | RET |      |
// |      |  Y  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  -  |      |
//                    | ESC | TAB |BSPC |   |SPACE| DEL  |GLOBE|
                        bindings = <
   &none &kp Q            &kp W         &kp E         &kp R        &kp T          &kp DE_Z      &uue         &kp I         &ooe         &kp P                &none
   &none &aae             &hrmsz LALT 0 &hrml LSHFT D &kp F        &kp G          &kp H         &kp J        &hrmr RSHFT K &hrmr RALT L &kp RET              &none
   &none &brml LCTRL DE_Y &kp X         &kp C         &brml LCMD V &kp B          &kp N         &brmr RCMD M &kp DE_COMMA  &kp DE_DOT   &brmr RCTRL DE_MINUS &none
                                        &lt FUN ESC   &lt NAV TAB  &lt SYM BSPC   &lt SYM SPACE &lt NAV DEL  &kp GLOBE
                        >;
    };

    sym_layer {
      display-name = "Sym";
// -----------------------------------------------------------------------------------------
// |      |  §  |  $  |  {  |  }  |  %  |   |  /  |  7  |  8  |  9  |  *  |      |
// |      |  !  |  "  |  (  |  )  |  '  |   |  =  |  4  |  5  |  6  |  0  |      |
// |      |  ´  |  &  |  [  |  ]  |  ?  |   |  +  |  1  |  2  |  3  |  -  |      |
//                    |     |     |     |   |     |     |     |
                        bindings = <
   &none &kp DE_SECT          &kp DE_DOLLAR     &kp DE_LBRC         &kp DE_RBRC        &kp DE_PERCENT   &kp DE_SLASH &kp DE_N7        &kp DE_N8         &kp DE_N9        &kp DE_STAR &none
   &none &kp DE_EXCL          &hrml LALT DE_DQT &hrml LSHFT DE_LPAR &kp DE_RPAR        &kp DE_SQT       &kp DE_EQUAL &kp DE_N4        &hrmr RSHFT DE_N5 &hrmr RALT DE_N6 &kp DE_N0   &none
   &none &brml LCTRL DE_ACUTE &kp DE_AMPS       &kp DE_LBKT         &brml LCMD DE_RBKT &kp DE_QMARK     &kp DE_PLUS  &brmr RCMD DE_N1 &kp DE_N2         &kp DE_N3        &trans      &none
                                                &trans              &trans             &trans           &trans       &trans           &trans
                        >;
    };

    nav_layer {
      display-name = "Nav";
// -----------------------------------------------------------------------------------------
// |      |BRIUP|  ^  |     |     |  \  |   |PgUp | Home|  ↑  | End |VOLUP|      |
// |      |CAPLO|     |  <  |  >  |  `  |   |PgDn |  ←  |  ↓  |  →  |VOLDO|      |
// |      |BRIDO|  °  |     |  #  |  |  |   |     |     |     |     |MUTE |      |
//                    |     |     |     |   |     |     |     |
                        bindings = <
   &none &kp C_BRI_UP         &kp DE_CARET  &none             &none              &kp DE_BSLH    &kp PG_UP &kp HOME &kp UP           &kp END          &kp C_VOL_UP       &none
   &none &caps_word           &kp LALT      &hrml LSHFT DE_LT &kp DE_GT          &kp DE_GRAVE   &kp PG_DN &kp LEFT &hrmr RSHFT DOWN &hrmr RALT RIGHT &kp C_VOL_DN       &none
   &none &brml LCTRL C_BRI_DN &kp DE_DEGREE &none             &brml LCMD DE_HASH &kp DE_PIPE    &none     &kp RCMD &none            &none            &brmr RCTRL C_MUTE &none
                                            &trans            &trans             &trans         &trans    &trans   &trans
                        >;
    };

    fun_layer {
      display-name = "Fun";
// -----------------------------------------------------------------------------------------
// |      |     |     |     |     |     |   | F12 | F7  | F8  | F9  |      |      |
// |      |     | ALT |SHFT |     |     |   | F11 | F4  | F5  | F6  |      |      |
// |      |CTRL |     |     | CMD |     |   | F10 | F1  | F2  | F3  |      |      |
//                    |     |     |     |   |     |     |     |
                        bindings = <
   &none &none     &none    &none     &none    &none    &kp F12 &kp F7 &kp F8 &kp F9 &none &none
   &none &none     &kp LALT &kp LSHFT &none    &none    &kp F11 &kp F4 &kp F5 &kp F6 &none &none
   &none &kp LCTRL &none    &none     &kp LCMD &none    &kp F10 &kp F1 &kp F2 &kp F3 &none &none
                            &trans    &trans   &trans   &trans  &trans &trans
                        >;
    };

    sys_layer {
      display-name = "Sys";
// -----------------------------------------------------------------------------------------
// |      |     |     |     |     |     |   |     |     |     |     |     |      |
// |      |     |     |     |     |STUDI|   |     |     |     |     |     |      |
// |      | BT0 | BT1 | BT2 |BTCLR|BCLRA|   |LOCKS|     |     |     |     |      |
//                    |     |     |     |   |     |     |     |
                        bindings = <
   &none &none        &none        &none        &none      &none            &none   &none  &none &none &none &none
   &none &none        &none        &none        &none      &studio_unlock   &none   &none  &none &none &none &none
   &none &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_CLR &bt BT_CLR_ALL   &locscr &none  &none &none &none &none
                                   &trans       &trans     &trans           &trans  &trans &trans
                        >;
    };

  };

  conditional_layers {
    compatible = "zmk,conditional-layers";
    sys_layer {
      if-layers = <SYM NAV>;
      then-layer = <SYS>;
    };
  };
};
